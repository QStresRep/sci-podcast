name: TTS from posts

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install azure-cognitiveservices-speech pydub

      - name: Install ffmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg jq

      - name: Verify Azure secrets
        run: |
          test -n "${{ secrets.SPEECH_KEY }}" || (echo "Missing SPEECH_KEY" && exit 1)
          test -n "${{ secrets.SPEECH_REGION }}" || (echo "Missing SPEECH_REGION" && exit 1)

      # 可选检查：若接口 429，则跳过，不阻塞
      - name: Check voices availability (best-effort)
        env:
          SPEECH_KEY: ${{ secrets.SPEECH_KEY }}
          SPEECH_REGION: ${{ secrets.SPEECH_REGION }}
        run: |
          set -e
          tries=6
          delay=1
          code=0
          for i in $(seq 1 $tries); do
            code=$(curl -sS -o voices.json -w "%{http_code}" \
              -H "Ocp-Apim-Subscription-Key: ${SPEECH_KEY}" \
              "https://${SPEECH_REGION}.tts.speech.microsoft.com/cognitiveservices/voices/list" \
              || echo "000")
            if [ "$code" = "200" ]; then break; fi
            echo "Voice list HTTP $code; retrying in ${delay}s (attempt $i/$tries)"
            sleep $delay
            delay=$((delay*2))
          done
          if [ "$code" != "200" ]; then
            echo "::warning::Could not fetch voices list (HTTP $code). Skipping availability check."
            exit 0
          fi

          echo "Sample voices:"
          jq -r '.[0:8][] | "\(.ShortName) | \(.Locale)"' voices.json || true

          # 仅做提醒，不阻塞
          if ! jq -r '.[].ShortName' voices.json | grep -xq "en-US-Emma:DragonHDLatestNeural"; then
            echo "::warning::HD voice en-US-Emma:DragonHDLatestNeural not found in ${SPEECH_REGION}."
          fi
          if ! jq -r '.[].ShortName' voices.json | grep -xq "en-US-AndrewMultilingualNeural"; then
            echo "::warning::Voice en-US-AndrewMultilingualNeural not found in ${SPEECH_REGION}."
          fi

      - name: Debug posts folder
        run: |
          echo "Listing posts/"
          ls -alh posts || echo "No posts folder!"
          echo "Show first file head (if any):"
          for f in posts/*.txt; do
            [ -e "$f" ] || continue
            echo "---- $f ----"
            head -n 5 "$f"
            break
          done

      - name: Run TTS batch
        env:
          SPEECH_KEY: ${{ secrets.SPEECH_KEY }}
          SPEECH_REGION: ${{ secrets.SPEECH_REGION }}

          # 你当前想用的两个 HD 声线
          VOICE_HOST: en-US-Emma:DragonHDLatestNeural
          VOICE_SCI:  en-US-Andrew:DragonHDLatestNeural

          # 速率：HD 不支持 <prosody>，因此这个对 HD 无效；保留给将来切回 Multilingual 用
          SPEED: +20%

          # ↓↓↓ 新增：全局节流参数（必要！避免 429）
          THROTTLE_MS: "4000"        # 每块之间固定等待（毫秒）
          CHUNK_PAUSE_EVERY: "4"     # 每 4 块，额外长休眠
          CHUNK_PAUSE_SECS: "20"     # 额外长休眠秒数
          RETRIES: "10"              # 每块最多重试次数
        run: |
          # 降低每块复杂度（但不要过小，块少=请求少=更稳）
          python tts_batch.py --merge --max-chars 3000 --break-ms 300 --only-full-to-docs
          echo "List outputs:"
          ls -alh tts_out || true
          ls -alh docs/audio || true

                                              
        run: |
          # 适当降低块大小，提高稳定性；HD 不用 break，但代码已处理
          python tts_batch.py --merge --max-chars 2500 --break-ms 300 --only-full-to-docs
          echo "List outputs:"
          ls -alh tts_out || true
          ls -alh docs/audio || true

      - name: Commit merged audio
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/audio
          git commit -m "Add merged TTS outputs" || echo "Nothing to commit"
          git push
